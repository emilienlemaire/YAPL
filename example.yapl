import stdio;
import math::{cos, sin};

int x;
int y = 5;

double z = cos(10);

stdio::print();

func add(int x, int y) -> int {
    return x + y;
}

for(int i in 0 ... 4) {
    stdio::print(i);
}

for(int i in 0 ..< 4) {
    stdio::print(i);
}

for(int i in 0 ..- 4) {
    stdio::print(i);
}

for(int i in 0 <.. 4) {
    stdio::print(i);
}

int x[3] = [0, 1, 2];

x = [2, 3, 4];

stdio::print(x[0]);

export struct exampleStruct {
    int a;
    double b;
    func addA(int b) -> int {
        a = a + b;
        return a + b;
    }
}

exampleStruct example(1, 2.5);

int test = example.addA(12);

example = {3, 1.5};

example.a = 8;

stdio::print(example.a);

func mult(int x, int y) -> int {
    return x * y;
}

//In another file

import example;

example::add(5, 2);
example::exampleStruct thisIsAStruct(3, 0.5);

//Other file again

import example::{add};

add(5, 2);
